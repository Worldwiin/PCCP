/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pccp;

import Database.DatabaseConnection;
import java.io.File;
import java.sql.ResultSet;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Vish
 */
public class Login extends javax.swing.JFrame {

    DatabaseConnection db;
    public static String userLocation;
    public static String Email;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Login Form");
        db = new DatabaseConnection();
        db.dbconnection();
        setInitialValue();
    }

    private void setInitialValue() {
        if (!Details.username.equals("")) {
            txtUsername.setText(Details.username);
            txtUsername.setEditable(false);
        }
    }

    private boolean verifyUserName(String name) {
        boolean flage = false;
        try {
            String query = "SELECT * FROM UserTable WHERE Username='" + name + "'";
            //System.out.println("Q : "+query);
            ResultSet rs = db.getResultSet(query);
            if (rs.next()) {
                flage = true;
            }
        } catch (Exception e) {
        }
        return flage;
    }

    private void getAllDetails(String username, String location) {
        try {
            String query = "SELECT * FROM UserTable WHERE Username='" + username + "'";
            ResultSet rs = db.getResultSet(query);
            if (rs.next()) {
                String position = rs.getString("Position");
                String imgList = rs.getString("ImageList");
                String audList = rs.getString("AudioList");
                Email = rs.getString("Email");
                
                setImage(location, imgList);
                setAudio(location, audList);
                setPosition(location, position);
            }
        } catch (Exception e) {
        }
    }

    private void setImage(String location, String list) {
        String[] split = list.split(",");
        for (int i = 0; i < Details.imageName.length; i++) {
            Details.imageName[i] = location + "images\\" + split[i];
        }
    }

    private void setAudio(String location, String list) {
        String[] split = list.split(",");
        for (int i = 0; i < Details.audioName.length; i++) {
            Details.audioName[i] = location + "audio\\" + split[i];
        }
    }

    private void setPosition(String location, String list) {
        String[] split = list.split(",");
        for (int i = 0; i < Details.positionx1.length; i++) {
            String pos = split[i];
            String[] sp = pos.split(" ");

            Details.positionx1[i] = Integer.parseInt(sp[0]);
            Details.positiony1[i] = Integer.parseInt(sp[1]);
            Details.positionx2[i] = Integer.parseInt(sp[2]);
            Details.positiony2[i] = Integer.parseInt(sp[3]);
        }
    }

    private void getInvalidAudio() {
        try {
            String path = new File(".").getCanonicalPath();
            String audioPath = path + File.separator + "InvalidAudio" + File.separator;

            shuffleArray(Details.musicName);

            for (int i = 0; i < Details.musicName.length; i++) {
                Details.invalidAudio[i] = audioPath + Details.musicName[i];
            }
        } catch (Exception e) {
        }
    }

    void shuffleArray(String[] ar) {
        Random rnd = new Random();
        for (int i = ar.length - 1; i > 0; i--) {
            int index = rnd.nextInt(i + 1);
            // Simple swap
            String a = ar[index];
            ar[index] = ar[i];
            ar[i] = a;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnPassword = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnLogin = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login Page", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Bright", 1, 18), new java.awt.Color(255, 0, 255))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel1.setText("Enter Username");

        txtUsername.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        jLabel3.setText("Enter Password");

        btnPassword.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        btnPassword.setText("Password");
        btnPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasswordActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnLogin.setFont(new java.awt.Font("Lucida Bright", 1, 14)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPassword)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(btnCancel)
                        .addGap(37, 37, 37)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(btnPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasswordActionPerformed
        // TODO add your handling code here:        
        if (Details.counter == 3) {
            JOptionPane.showMessageDialog(this, "Password Selection Done Login it","Message", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        String username = txtUsername.getText();

        if (username.equals("")) {
            JOptionPane.showMessageDialog(this, "Please Enter username","Message", JOptionPane.INFORMATION_MESSAGE);
            txtUsername.grabFocus();
        } else if (verifyUserName(username)) {
            userLocation = getUserLocation(username);
            Details.username = username;
            getAllDetails(username, userLocation);
            getInvalidAudio();

            this.dispose();
            new PCCPLogin().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Invalid Username : Plase Enter valid Username","Error", JOptionPane.ERROR_MESSAGE);
            txtUsername.grabFocus();
        }
    }//GEN-LAST:event_btnPasswordActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {
        int counter = 0;
        for (int i = 0; i < Details.validate.length; i++) {
            if (Details.validate[i]) {
                counter++;
            }
        }

        if (counter == 3) {
            JOptionPane.showMessageDialog(this, "Valid Password: System Successfully Logged In", "Welcome Message", JOptionPane.INFORMATION_MESSAGE);
            this.dispose(); // Close the login form
            new MainMDIForm().setVisible(true); // Open the main application form
        } else {
            JOptionPane.showMessageDialog(this, "Invalid Password: System Failed to Login", "Error", JOptionPane.ERROR_MESSAGE);
            Details.counter = 0; // Reset counter for failed login attempts
        }
    }


    private String getUserLocation(String username) {
        String location = "";
        try {
            String path = new File(".").getCanonicalPath();
            path = path + File.separator + "LoginDetails";
            location = path + File.separator + username + File.separator;
        } catch (Exception e) {
        }
        return location;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new Login().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}